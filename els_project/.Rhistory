View(EPSC)
View(orm)
colnames(orm)
y
colnames(orm)
colnames(orm)
is.factor(orm$Groups)
is.factor(orm$Early_treatment)
is.factor(orm$Late_treatment)
shapiro.test(rnorm(100, mean = 5, sd = 3))
n
ls
y
ls()
colnames(morall)
test=rowmerge(morall,2)
?print
aropos("print")
apropos("print")
?sprintf
print("hai/n"
)
print("hai\n")
)
print("hai\n")
sprintf("%s\n",
)
sprintf("%s/n","hai")
sprintf("%s\n","hai")
sprintf("%s\r","hai")
sprintf("%s%r","hai")
sprintf("%s %n","hai")
sprintf("%s %d","hai")
sprintf("%s %d","hai"+"34")
sprintf("%s %d","hai",34)
sprintf("%s \n %d","hai",34)
sprintf("%s /n %d","hai",34)
apropos("newline")
?sprintf
view(morall)
View(morall)
test=rowmerge(morall,2)
test=rowmerge(morall,2)
?sapply
sapply(morall,is.numeric)
sapply(morall,is.numeric())
sapply(morall,fun=is.numeric)
sapply(morall,FUN=is.numeric)
all(sapply(morall,FUN=is.numeric))
test=rowmerge(morall,2)
test=rowmerge(morall,2)
test=rowmerge(morall,2)
View(morall[:,c(1,2)]
View(morall[:,c(1,2)])
View(morall[,c(1,2)])
colnames(morall)
?any
any(colnames(morall)=="cellid")
any(is.factor(colnames(morall)))
is.factor(morall)
is.factor(morall$cellid)
is.factor(morall$cellid)
View(morall)
ls()
View(moralt)
View(morallt)
View(morallt)
unique(moralt$side)
unique(moralt[,"side"])
unique(morall[,"side"])
unique(morall[,"radius"])
sort(unique(morall[,"radius"]))
sort(unique(morall[morall[,"area"]=="ca1","radius"]))
sort(unique(morall[morall[,"area"]=="bla","radius"]))
View(morall)
colnames(morallt)
ls()
ls()
morall[,"dl"]
morall[is.na(morall[,"dl"]),"cellid")
morall[is.na(morall[,"dl"]),"cellid"]
lineplot.CI(x.factor=radius,res=dl,group=side,data=morall[morall$cellid=="27a",])
lineplot.CI(x.factor=radius,res=dl,group=side,data=morall[morall$cellid=="71a",])
morall[is.na(morall[morall[,"area"]=="ca1","dl"]),"cellid"]
morall[is.na(morall[morall[,"area"]=="bla","dl"]),"cellid"]
View(morall[morall[,"area"]=="ca1",])
is.na(morall[morall[,"area"]=="ca1","dl"])
any(is.na(morall[morall[,"area"]=="ca1","dl"]))
any(is.na(morall[morall[,"area"]=="bla","dl"]))
summary(mf);
summary(mf);
View(morall)
is.factor(morall$Cellid)
levels(morall$Cellid)
summary(aov_radius)
model_tables()
model.tables()
model.tables(aov_radius)
apropos("long")
apropos("convert")
apropos("reshape")
?reshape
 unique(mor$Radius)
unique(mor$radius)
mf
anova(mf)
View(morw)
View(morw)
?with
as.matrix(morw)
View(morw)
View(morw2)
View(mormat)
View(morw)
View(mormat)
View(mormat)
grepl(colnames(morw),"dl")
?grepl
grepl("dl",colnames(morw2))
colnames(grepl("dl",colnames(morw2)))
colnames(morw2)grepl("dl",colnames(morw2)))
colnames(morw2)[grepl("dl",colnames(morw2)))]
colnames(morw2)[grepl("dl",colnames(morw2))]
mormat
mormat
View(mormat)
View(mormat)
View(mormat)
View(mormat)
levels(morw2$cellid)
as.factor(morw2$cellid)
influence(mf,obs=TRUE)
ls()
lmer(dl~ (Group * Radius) + (1|Radius)+(1|Cellid),data=mor)
lmer(dl~ (Group * Radius) + (1|Radius|Cellid),data=mor)
lmer(dl~ (Group * Radius) + (1+Radius|Cellid),data=mor)
lmer(dl~ (Group + Radius) + (1+Radius|Cellid),data=mor)
lmer(dl ~ (Radius+Group) + (1+Radius|Cellid),data=mor)
lmer(dl ~ Radius+Group + (1+Radius|Cellid),data=mor)
anova(mf)
summary(mf2)
anova(mf2)
anova(mf)
anova(mf2)
View(morw2)
View(morw2)
View(morw2)
mormat
mormat
View(morw)
View(morw2)
View(mormat)
View(morw2)
View(mormat)
mormat
class(mormat)
as.matrix(mormat)
as.matrix(mormat)
class(mormat)
View(mormat)
mormat
mormat
mvlm
shollradius
?Anova
mormat
require("car")
mvlm
summary(mvlm.aov)
View(mormat)
is.na(mormat)
version()
version
ls()
View(cortdat)
View(ca1epscdat)
unique(ca1epscdat$expdate)
colnames(ca1epscdat)
unique(ca1epscdat$ExpDate)
length(unique(ca1epscdat$ExpDate))
length(unique(blaepscdat$ExpDate))
View(epscdat)
length(epscdat)
View(epscdat)
ls()
View(epscdat)
View(epscdat)
View(allepscdat)
allexpdates = unique(allepscdat[,"ExpDate"])
allexpdates
allexpdates2 = allepscdat[allepscdat[,"CellCount"] == 1,"ExpDate"]
allexpdates2
allexpdates3 = allepscdat[allepscdat[,"CellCount"] == 2,"ExpDate"]
allexpdates3
allepscdat[allepscdat[,"ExpDate"]==allexpdates[1],c("ExpDate","Invivo","CortLevel")];
allepscdat[allepscdat[,"ExpDate"]==allexpdates[2],c("ExpDate","Invivo","CortLevel")];
allepscdat[allepscdat[,"ExpDate"]==allexpdates[3],c("ExpDate","Invivo","CortLevel")];
allepscdat[allepscdat[,"ExpDate"]==allexpdates[34,c("ExpDate","Invivo","CortLevel")];
allepscdat[allepscdat[,"ExpDate"]==allexpdates[4],c("ExpDate","Invivo","CortLevel")];
allepscdat[allepscdat[,"ExpDate"]==allexpdates[1:33],c("ExpDate","Invivo","CortLevel")];
allepscdat[allepscdat[,"ExpDate"]==allexpdates[,c("ExpDate","Invivo","CortLevel")];
allepscdat[allepscdat[,"ExpDate"]==allexpdates[6],c("ExpDate","Invivo","CortLevel")];
ls()
length(unique(ca1epscdat[ca1epscdat$ExpDate))
length(unique(ca1epscdat[ca1epscdat$ExpDate,]))
length(unique(ca1epscdat[,"ExpDate"]))
length(unique(blqepscdat[,"ExpDate"]))
length(unique(blaepscdat[,"ExpDate"]))
22+16
aggregate(narAMmgfree ~ GroupName, FUN=function(x){se(x,na.rm=TRUE)},data=epscdat);
quit("no")
